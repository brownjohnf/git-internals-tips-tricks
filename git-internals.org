* functions

function lla() {
  echo '```'
  echo "\$ ls $@"
  ls -lah $@ | awk '{if (NR>1) print $1, $5, $9}'
  echo '```'
  echo
}

function run() {
  echo '```'
  echo "$ $@"
  $@
  echo '```'
  echo
}

* git
Git, at its heart, is a content-addressable storage system.

#+begin_quote
Content-addressable storage [...] is a way to store information so it can be
retrieved based on
its content, not its location. -- Wikipedia[fn:1:https://en.wikipedia.org/wiki/Content-addressable_storage]
#+end_quote

This means that you give it some
bytes, and it will store them indexed by the checksum of the bytes.

Almost everything in git is represented on disk by blobs stored in files named
according to their content hash; this is why you can step back through history
(among other features). Let's start with an empty directory, and start
constructing a valid .git directory from scratch.

* .git directory
Before we start building our own directory, let's take a look at the contents of
the .git directory in repo containing this document. The files in the .git
directory contain all of the contents of the repo.

#+BEGIN_SRC sh :results output :exports both
ls -lah .git
#+END_SRC

#+RESULTS:
#+begin_example
total 11K
drwxr-xr-x 8 jackb jackb  13 Nov 29 08:01 .
drwxr-xr-x 3 jackb jackb  10 Nov 29 08:22 ..
drwxr-xr-x 2 jackb jackb   2 Nov 28 22:28 branches
-rw-r--r-- 1 jackb jackb 280 Nov 28 22:28 config
-rw-r--r-- 1 jackb jackb  73 Nov 28 22:28 description
-rw-r--r-- 1 jackb jackb  23 Nov 28 22:28 HEAD
drwxr-xr-x 2 jackb jackb  14 Nov 28 22:28 hooks
-rw-r--r-- 1 jackb jackb 385 Nov 28 22:28 index
drwxr-xr-x 2 jackb jackb   3 Nov 28 22:28 info
drwxr-xr-x 3 jackb jackb   4 Nov 28 22:28 logs
drwxr-xr-x 4 jackb jackb   4 Nov 28 22:28 objects
-rw-r--r-- 1 jackb jackb 114 Nov 28 22:28 packed-refs
drwxr-xr-x 5 jackb jackb   5 Nov 28 22:28 refs
#+end_example

** .git/objects
Every time you commit, files get stored in .git/objects based on their SHA256.
We can get the hash that git will use when storing a file

#+begin_src sh :results output :exports both
git hash-object example.txt
#+end_src

#+RESULTS:
: 8b04d2f66940d680d9f281235d026dbcbd7edbf8

and then see it in the .git/objects directory

#+begin_src shell :results output :exports both
ls -lah .git/objects
#+end_src

#+RESULTS:
: total 13K
: drwxr-xr-x 4 jackb jackb  4 Nov 28 22:28 .
: drwxr-xr-x 8 jackb jackb 13 Nov 29 08:01 ..
: drwxr-xr-x 2 jackb jackb  2 Nov 28 22:28 info
: drwxr-xr-x 2 jackb jackb  4 Nov 28 22:28 pack

#+begin_src shell :results output :exports both
ls -lah .git/objects/8b
#+end_src

#+RESULTS:

* Reading Objects
git uses a SHA-1 hashing algorithm, but only after prepending some header metadata.

run shasum -a 1 example.txt

Use plumbing commands to get the contents of the file back out.

run xxd .git/objects/8b/04d2f66940d680d9f281235d026dbcbd7edbf8
run git cat-file -p 8b04d2f66940d680d9f281235d026dbcbd7edbf8

* Commits
Commits are also stored as objects in this blob storage.

run git --no-pager log -n 1 fc9cf9e409cb11685d0a90b7e78585ca76723b12
run tree .git/objects/fc
run git cat-file -p fc9cf9e409cb11685d0a90b7e78585ca76723b12
